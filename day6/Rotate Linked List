/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     // Write your code here.
     if(!head) return NULL;

     int count = 1;
     Node *temp = head;
     while(temp->next != NULL){
          temp = temp->next;
          count++;
     }
     
     temp->next = head;
     k = k % count;
     k = count - k;

     while(k--){
          temp = temp->next;
     }

     head = temp->next;
     temp->next = NULL;
     return head;
     
}
