#include<bits/stdc++.h>


 vector<int> nextSmallerElement(vector<int> &nums){
    int n = nums.size();
    stack<int> st;
    st.push(-1);
    vector<int> ans(n);
    for(int i = n-1; i >= 0; i--){
        int curr = nums[i];

        while(st.top() != -1 && nums[st.top()] >= curr){
           st.pop();
        }
   
        ans[i] = st.top();
        st.push(i);     
    }

    return ans;
 }
 
 vector<int> prevSmallerElement(vector<int> &nums){
   int n = nums.size();
   stack<int> st;
   st.push(-1);
   vector<int> ans(n);

   for(int i = 0; i < n; i++){
      int curr = nums[i];

      while(st.top() != -1 && nums[st.top()] >= curr){
        st.pop();
      }
      ans[i] = st.top();
      st.push(i);
   }

   return ans;
 }
 
 int largestRectangle(vector < int > & heights) {
     int n = heights.size();

     vector<int> next, prev;
     int area = INT_MIN;
     next = nextSmallerElement(heights);
     prev = prevSmallerElement(heights);

     for(int i = 0; i < n; i++){
        int l = heights[i];

        if(next[i] == -1){
          next[i] = n;
        }

        int b = next[i] - prev[i] - 1;
        area = max(area, l*b);
     }
     return area;
 }
