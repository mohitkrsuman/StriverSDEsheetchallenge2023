int solveMemo(int idx, int n, vector<int> &price, vector<vector<int>> &dp){
	if(idx == 0){
		return n*price[0];
	}

	if(dp[idx][n] != -1){
		return dp[idx][n];
	}

	int notTake = 0 + solveMemo(idx-1, n, price, dp);
	int rodLength = idx+1;
	int take = INT_MIN;

	if(rodLength <= n){
		take = price[idx] + solveMemo(idx, n - rodLength, price, dp);
	}
	dp[idx][n] = max(take, notTake);

	return dp[idx][n];
}


int cutRod(vector<int> &price, int n)
{
	vector<vector<int>> dp(n, vector<int>(n+1, -1));
	return solveMemo(n-1, n, price, dp);
}
