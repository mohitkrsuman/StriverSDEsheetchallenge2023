#include <bits/stdc++.h>

bool dfs(int i,int par,int col,vector<int> &vis, vector<vector<int>> adj)

{

    vis[i] = col;

 

    for(auto it:adj[i])

    {  

        if(vis[it] == -1)

        {

            dfs(it,i,!col,vis,adj);

        }

        else if(it != par && vis[it] == vis[par])

        {

            return true;

        }

    }

    return false;

}

 

bool isGraphBirpatite(vector<vector<int>> &edges) {

   int n = edges.size();

   int m = edges[0].size();

   vector<vector<int>> adj(n);  

   for(int i = 0;i<n; i++)

   {

       for(int j=0;j<m;j++)

       {

         if(edges[i][j] == 1)

         {

            adj[i].push_back(j);

            adj[j].push_back(i);

         }

       }

   }

 

   vector<int> vis(n,-1);

   for(int i=0; i<n; i++)

   {

       if(vis[i] == -1)

       {

           int len = 0;

           if(dfs(i,-1,0,vis,adj) == true)

           {

               return 0;

           }

       }

   }

   return 1;

}
