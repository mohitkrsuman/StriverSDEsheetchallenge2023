int floydWarshall(int n, int m, int src, int dest, vector<vector<int>> &edges) {
    // Write your code here.
    int matrix[n][n];
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            matrix[i][j] = 1e9;
            if(i == j) matrix[i][j] = 0;
        }
    }
    

    for(auto it : edges){
        int u = it[0]-1;
        int v = it[1]-1;
        int wt = it[2];

        matrix[u][v] = wt;
    }

    for(int via = 0; via < n; via++){
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                if(matrix[i][via] != 1e9 && matrix[via][j] != 1e9){
                     matrix[i][j] = min(matrix[i][j], matrix[i][via] + matrix[via][j]);
                }
            }
        }
    }

    return matrix[src-1][dest-1];
}
