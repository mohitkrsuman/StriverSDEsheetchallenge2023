#include<bits/stdc++.h>

int dx[8] = {-1, -1, -1, 0, 1, 1, 1, 0};
int dy[8] = {-1, 0, 1, 1, 1, 0, -1, -1};

void bfs(int i, int j, int **arr, int n, int m){
   arr[i][j] = 0;
   queue<pair<int,int>> q;
   q.push({i, j});

   while(!q.empty()){
      int i = q.front().first;
      int j = q.front().second;
      q.pop();

      for(int k = 0; k < 8; k++){
         int nwr = dx[k] + i;
         int nwy = dy[k] + j;

         if(nwr < 0 || nwy < 0 || nwr >= n || nwy >= m || arr[nwr][nwy] == 0) continue;

         q.push({nwr, nwy});
         arr[nwr][nwy] = 0;
      }
   }
}

int getTotalIslands(int** arr, int n, int m)
{
   // Write your code here.
   int no_of_islands = 0;
   for(int i = 0; i < n; i++){
      for(int j = 0; j < m; j++){
         if(arr[i][j] == 1){
            no_of_islands++;
            bfs(i, j, arr, n, m);
         }
      }
   }

   return no_of_islands;
}
