#include<bits/stdc++.h>

int help(string &text1, string &text2, int i, int j, vector<vector<int>>&dp){
	int n = text1.length();
	int m = text2.length();

	if(i == n || j == m){
		return 0;
	}
    if(dp[i][j] != -1){
		return dp[i][j];
	}
    
	int res = 0;
	if(text1[i] == text2[j]){
		res = 1 + help(text1, text2, i+1, j+1, dp);
	}else{
		res = max(help(text1, text2, i+1, j, dp), help(text1, text2, i, j+1, dp));
	}

	return dp[i][j] = res;
}


int lcs(string s, string t)
{
	int n = s.length(), m = t.length();
	vector<vector<int>> dp(n, vector<int>(m, -1));

	return help(s, t, 0, 0, dp);
}
