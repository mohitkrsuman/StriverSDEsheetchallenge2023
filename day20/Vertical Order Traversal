#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    vector<int> res;
    if(!root) return res;
    map<int,vector<int>> map;
    
    queue<pair<TreeNode<int>*, int>> q;
    q.push({root, 0});

    while(!q.empty()){
        auto curr = q.front();
        q.pop();

        TreeNode<int> *node = curr.first;
        int hd = curr.second;

        map[hd].push_back(node->data);
        if(node->left) q.push({node->left, hd-1});
        if(node->right) q.push({node->right, hd+1});
    }

    for(auto it : map){
        for(auto num : it.second){
            res.push_back(num);
        }
    }

    return res;
}





