#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
    vector<int> res;
    if(!root) return res;

    queue<pair<BinaryTreeNode<int>*,int>>q;
    q.push({root, 0});

    map<int,int> map;

    while(!q.empty()){
       auto curr = q.front();
       q.pop();

       BinaryTreeNode<int> *node = curr.first;
       int hd = curr.second;

       map[hd] = node->data;

       if(node->left){
           q.push({node->left, hd-1});
       }
       if(node->right){
           q.push({node->right, hd+1});
       }
    }

    for(auto it : map){
        res.push_back(it.second);
    }

    return res;
    
}
